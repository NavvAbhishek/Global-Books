# ===============================
# Application Configuration
# ===============================
spring.application.name=payments-service
server.port=8082
server.servlet.context-path=/api/v1

# ===============================
# Database Configuration
# ===============================
spring.datasource.url=jdbc:postgresql://localhost:5432/globalbooks_payments
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# ===============================
# JPA/Hibernate Configuration
# ===============================
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=false

# ===============================
# Flyway Configuration
# ===============================
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration

# ===============================
# RabbitMQ Configuration
# ===============================
spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USER:guest}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:guest}
spring.rabbitmq.virtual-host=/
spring.rabbitmq.publisher-confirm-type=correlated
spring.rabbitmq.publisher-returns=true
spring.rabbitmq.template.mandatory=true

# RabbitMQ Listener Configuration
spring.rabbitmq.listener.simple.acknowledge-mode=manual
spring.rabbitmq.listener.simple.concurrency=5
spring.rabbitmq.listener.simple.max-concurrency=10
spring.rabbitmq.listener.simple.prefetch=1
spring.rabbitmq.listener.simple.retry.enabled=true
spring.rabbitmq.listener.simple.retry.initial-interval=1000
spring.rabbitmq.listener.simple.retry.max-attempts=3
spring.rabbitmq.listener.simple.retry.max-interval=10000
spring.rabbitmq.listener.simple.retry.multiplier=2.0

# ===============================
# Security Configuration
# ===============================
spring.security.user.name=payment_service
spring.security.user.password=${SERVICE_PASSWORD}

# ===============================
# Actuator Configuration
# ===============================
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.metrics.export.prometheus.enabled=true

# ===============================
# Logging Configuration
# ===============================
logging.level.root=INFO
logging.level.com.globalbooks.payments=DEBUG
logging.level.org.springframework.amqp=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n
logging.file.name=logs/payments-service.log
logging.file.max-size=10MB
logging.file.max-history=30

# ===============================
# Jackson Configuration
# ===============================
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.serialization.indent-output=true
spring.jackson.deserialization.fail-on-unknown-properties=false
spring.jackson.default-property-inclusion=non_null

# ===============================
# Swagger/OpenAPI Configuration
# ===============================
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.operations-sorter=method

# ===============================
# Connection Pool Configuration
# ===============================
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.auto-commit=false

# ===============================
# Custom Payment Service Properties
# ===============================
payment.retry.max-attempts=3
payment.retry.delay=1000
payment.processing.timeout=30000
payment.validation.strict-mode=true
payment.currency.default=USD
payment.currency.supported=USD,EUR,GBP,CAD,AUD

# Transaction Limits
payment.limits.min-amount=0.01
payment.limits.max-amount=999999.99
payment.limits.daily-limit=10000.00
payment.limits.monthly-limit=50000.00

# ===============================
# Payment Gateway Configuration (placeholders only)
# ===============================
payment.gateway.url=https://api.stripe.com
payment.gateway.merchant-id=${STRIPE_MERCHANT_ID}
payment.gateway.api-key=${STRIPE_API_KEY}
payment.gateway.timeout=15000
payment.gateway.retry-count=2

# ===============================
# Error Handling
# ===============================
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on_param
server.error.include-exception=false

# ===============================
# CORS Configuration (if needed)
# ===============================
#spring.web.cors.allowed-origins=*
#spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
#spring.web.cors.allowed-headers=*
#spring.web.cors.allow-credentials=true

# ===============================
# SSL/TLS Configuration (for production)
# ===============================
#server.ssl.enabled=true
#server.ssl.key-store=${SSL_KEYSTORE_PATH}
#server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD}
#server.ssl.key-store-type=PKCS12
#server.ssl.key-alias=payments-service
